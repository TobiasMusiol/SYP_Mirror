version: '3.8'
services:
  vue:
    build:
      context: ./vue/docker
    image: iot_etage/vue
    container_name: vue
    hostname: vue
    restart: always
    #depends_on:
      #- 'java'
    healthcheck:
      test: 'curl -f http://localhost:8080 -k'
    ports:
      - '8080:8080'
      - '8081:8081'
    volumes:
      - ./vue/src/iot_etage:/app
    environment:
      - TEST=test
    networks:
      iot-network:
        ipv4_address: 192.16.1.10
    command: '/app/node_modules/.bin/vue-cli-service serve --host 0.0.0.0 --port 8080'
    #command: '/bin/bash'
    #tty: true
    #logging:
    #  driver: 'none'

  worker:
    build:
      context: ./nodejs/docker
    image: iot_etage/worker
    container_name: worker
    hostname: worker
    restart: always
    depens_on:
      - 'mosquitto'
    #  - 'java'
    ports:
      - '3000:3000'
      - '3001:3001'
    volumes:
      - ./nodejs/src:/worker
    environment: 
      - TESTING=TESTING
    networks:
      iot-network:
        ipv4_address: 192.16.1.20
    command: 'node index.js'

  # java:
  #   build:
  #     context: ./java/docker
  #   image: iot_etage/java
  #   container_name: java
  #   hostname: java
  #   restart: always
  #   depends_on:
  #     - 'mongo'
  #     - 'mysql'
  #     - 'postgres'
  #   healthcheck:
  #     test: 'curl -f http://localhost:4200 -k'
  #   ports:
  #     - '4200:4200'
  #   volumes:
  #     - ./java/src:/app
  #   environment:
  #     # - TEST=test
  #   networks:
  #     iot-network:
  #       ipv4_address: 192.16.1.30
  #   command: # ...
  #   #command: '/bin/bash'
  #   #tty: true
  #   #logging:
  #   #  driver: 'none'

  mosquitto:
    build:
      context: ./mosquitto/docker
    image: iot_etage/mosquitto
    container_name: mosquitto
    hostname: mosquitto
    restart: always
    #healthcheck:
    #  test: 'curl -X GET 'http://localhost:4041/iot/about''
    ports:
      - '1883:1883'
      - '9001:9001'
    volumes:
      #- mosquitto/configs/mosquitto.conf:/mosquitto/config
      - ./mosquitto/configs/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    environment:
      - TEST=Test
    networks:
      iot-network:
        ipv4_address: 192.16.1.40

  postgres:
    build:
      context: ./postgres/docker
    image: iot_etage/postgres
    container_name: postgres
    hostname: postgres
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - TEST=test
      - POSTGRES_PASSWORD=admin_password
    networks:
      iot-network:
        ipv4_address: 192.16.1.50
    #command: '/bin/bash'
    #tty: true
    #logging:
    #  driver: 'none'

networks:
  iot-network:
    name: iot-network
    ipam:
      driver: default
      config:
        - subnet: '192.16.1.0/24'

volumes:
  postgres-data:
